AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31

Resources:
  StorageBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: name-storage-bucket
      VersioningConfiguration:
        Status: Enabled

  GraphQLAPI:
    Type: AWS::AppSync::GraphQLApi
    Properties:
      Name: my-graphql-api
      AuthenticationType: API_KEY
      ApiType: GRAPHQL
      LogConfig:
        CloudWatchLogsRoleArn: !GetAtt GraphQLLogRole.Arn
        FieldLogLevel: ALL

  GraphQLAPIKey:
    Type: AWS::AppSync::ApiKey
    Properties:
      ApiId: !GetAtt GraphQLAPI.ApiId

  ServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: S3Access
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:SelectObjectContent
                Resource: !GetAtt StorageBucket.Arn

  GraphQLLogRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CloudWatchLogsPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:CreateLogGroup
                  - logs:PutLogEvents
                  - logs:DescribeLogStreams
                Resource: "*"

  GraphQLSchema:
    Type: AWS::AppSync::GraphQLSchema
    Properties:
      ApiId: !GetAtt GraphQLAPI.ApiId
      DefinitionS3Location: "schema.graphql"

  BucketDataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      Type: HTTP
      ApiId: !GetAtt GraphQLAPI.ApiId
      Name: BucketWithJSONSource
      ServiceRoleArn: !GetAtt ServiceRole.Arn
      HttpConfig:
        Endpoint: !GetAtt StorageBucket.WebsiteURL
        AuthorizationConfig: # For this config to work, a ServiceRoleArn must be defined, otherwise a `The validated string is empty` will get thrown and you will be confused, like I was, for hours.
          AuthorizationType: AWS_IAM
          AwsIamConfig: # AWS Documentation says these aren't required, but they are if you're setting Authorization Type.
            SigningRegion: us-east-1
            SigningServiceName: s3 # This is the name of the resource being accessed. If you're contacting a resource you've named, you'll go with that, over the generic Amazon Name.

  BucketQueryResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      Kind: UNIT
      Runtime:
        Name: APPSYNC_JS
        RuntimeVersion: 1.0.0
      ApiId: !GetAtt GraphQLAPI.ApiId
      DataSourceName: !GetAtt BucketDataSource.Name
      FieldName: characterName
      TypeName: Query
      CodeS3Location: getNameComplex.js

  BucketSimpleResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      Kind: UNIT
      Runtime:
        Name: APPSYNC_JS
        RuntimeVersion: 1.0.0
      ApiId: !GetAtt GraphQLAPI.ApiId
      DataSourceName: !GetAtt BucketDataSource.Name
      FieldName: characterNameSlow
      TypeName: Query
      CodeS3Location: getNameSimple.js
